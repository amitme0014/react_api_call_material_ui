[{"C:\\Users\\Amit\\Desktop\\portfolio_project\\portfolio-react-app1\\src\\index.js":"1","C:\\Users\\Amit\\Desktop\\portfolio_project\\portfolio-react-app1\\src\\components\\counter.jsx":"2","C:\\Users\\Amit\\Desktop\\portfolio_project\\portfolio-react-app1\\src\\components\\home.jsx":"3","C:\\Users\\Amit\\Desktop\\portfolio_project\\portfolio-react-app1\\src\\components\\pages\\About.js":"4","C:\\Users\\Amit\\Desktop\\portfolio_project\\portfolio-react-app1\\src\\components\\pages\\Contact.js":"5","C:\\Users\\Amit\\Desktop\\portfolio_project\\portfolio-react-app1\\src\\components\\pages\\Address.js":"6","C:\\Users\\Amit\\Desktop\\portfolio_project\\portfolio-react-app1\\src\\components\\pages\\Home.js":"7","C:\\Users\\Amit\\Desktop\\portfolio_project\\portfolio-react-app1\\src\\components\\pages\\spinner.js":"8"},{"size":623,"mtime":1614875413635,"results":"9","hashOfConfig":"10"},{"size":2630,"mtime":1617892243478,"results":"11","hashOfConfig":"10"},{"size":2016,"mtime":1610316630634,"results":"12","hashOfConfig":"10"},{"size":4358,"mtime":1612372153873,"results":"13","hashOfConfig":"10"},{"size":4161,"mtime":1617892406539,"results":"14","hashOfConfig":"10"},{"size":2837,"mtime":1617640893905,"results":"15","hashOfConfig":"10"},{"size":1251,"mtime":1614875876018,"results":"16","hashOfConfig":"10"},{"size":851,"mtime":1617895472478,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},"1vuehow",{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"21"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"21"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"21"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"21"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"21"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Amit\\Desktop\\portfolio_project\\portfolio-react-app1\\src\\index.js",["42"],"import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nimport Counter from './components/counter';\r\nimport Home from './components/home';\r\n//const element = <h1>Hello Pammu</h1>\r\n\r\n//Now we want upper element to be renedered in react-dom, wo below code ka use kar k karte hain\r\n// root div jo hai wo index.html k andar hai, index.html public folder k andar hai, neeche wale code mein ham element ko root div, index.html mein render kar denge\r\n\r\n//ReactDom.render(element,document.getElementById('root'));\r\n\r\nReactDom.render(<Counter />,document.getElementById('root'));",["43","44"],"C:\\Users\\Amit\\Desktop\\portfolio_project\\portfolio-react-app1\\src\\components\\counter.jsx",["45","46"],"\r\nimport React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Button from '@material-ui/core/Button';  \r\nimport { AppBar, Container, Toolbar, Typography } from '@material-ui/core';\r\nimport {BrowserRouter,Link,Route,Switch} from 'react-router-dom';\r\nimport About from './pages/About';\r\nimport Contact from './pages/Contact';\r\nimport Address from './pages/Address';\r\nimport Home from './pages/Home';\r\nimport Spinner from './pages/spinner'\r\n//Material ui ka button import karaya\r\n\r\nclass Counter extends Component {\r\n\r\n    //Har component mein jab bhi variable use karna hoga toh uske liye ham react mein state use karte hain\r\n    state= {\r\n        count: 0\r\n    }\r\n    //Navigation bar k liye appbar,toolbar aur Typogaraphy teeno use karo.\r\n    render(){\r\n        return(\r\n            //hamesha div k andar html code likhna\r\n            <div>\r\n             {/* <span> { this.state.count } </span>\r\n             <span> { this.change() } </span>\r\n             <h1>Counter Component</h1>\r\n             <button className=\"badge badge-primary m-2\">Increament</button> \r\n             <Button variant=\"contained\" color=\"primary\">Hello World</Button>*/}\r\n            <BrowserRouter>\r\n                <switch>\r\n                    <Route exact path=\"/about\" component={About}></Route>\r\n                    <Route exact path=\"/contact\" component={Contact}></Route>\r\n                    <Route exact path=\"/address\" component={Address}></Route>\r\n                    <Route exact path=\"/home\" component={Home}></Route>\r\n                    <Route exact path=\"/spinner\" component={Spinner}></Route>\r\n\r\n\r\n\r\n                </switch>\r\n            \r\n\r\n             <Container>\r\n             <AppBar color=\"secondary\" variant=\"fixed\">\r\n                 <Toolbar>\r\n                    <Typography variant=\"h6\" style={{ flexGrow:1}}>Material UI</Typography>\r\n                    <div color=\"inherit\">\r\n                    <Button color=\"inherit\" component={Link} to=\"/home\">Home</Button>\r\n                    <Button color=\"inherit\" component={Link} to=\"/about\">About</Button>\r\n                    <Button color=\"inherit\" component={Link} to=\"/contact\">Contact</Button>\r\n                    <Button color=\"inherit\" component={Link} to=\"/address\">Address</Button>\r\n                    </div>\r\n                </Toolbar>\r\n             </AppBar>\r\n             </Container>\r\n             </BrowserRouter>\r\n             \r\n            </div>\r\n       \r\n        )\r\n    }\r\n\r\n    //Lets use function now\r\n    change(){\r\n        return this.state.count === 0 ? 'Zero hai bhai' : this.state.count;\r\n    }\r\n\r\n}\r\n\r\nexport default Counter;\r\n","C:\\Users\\Amit\\Desktop\\portfolio_project\\portfolio-react-app1\\src\\components\\home.jsx",["47","48","49","50","51","52","53"],"import React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nclass Home extends Component {\r\n\r\n    //Har component mein jab bhi variable use karna hoga toh uske liye ham react mein state use karte hain\r\n    state= {\r\n        count: 0\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            //hamesha div k andar html code likhna\r\n            <div>\r\n                     <nav class=\"navbar navbar-expand-sm bg-dark navbar-dark\">\r\n                    \r\n                    <a class=\"navbar-brand\" href=\"#\">Amit Bhaodria</a>\r\n\r\n                   \r\n                    <ul class=\"navbar-nav\">\r\n                        <li class=\"nav-item\">\r\n                        <a class=\"nav-link\" href=\"#\">Home</a>\r\n                        </li>\r\n                        <li class=\"nav-item\">\r\n                        <a class=\"nav-link\" href=\"#\">About Me</a>\r\n                        </li>\r\n\r\n                       \r\n                        <li class=\"nav-item dropdown\">\r\n                        <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbardrop\" data-toggle=\"dropdown\">\r\n                            Dropdown link\r\n                        </a>\r\n                        <div class=\"dropdown-menu\">\r\n                            <a class=\"dropdown-item\" href=\"#\">Link 1</a>\r\n                            <a class=\"dropdown-item\" href=\"#\">Link 2</a>\r\n                            <a class=\"dropdown-item\" href=\"#\">Link 3</a>\r\n                        </div>\r\n                        </li>\r\n                    </ul>\r\n                    </nav>\r\n\r\n                   \r\n  \r\n                    <div class=\"container\">\r\n                    <h3>Navbar With Dropdown</h3>\r\n                    <p>This example adds a dropdown menu in the navbar.</p>\r\n                    </div>\r\n                  \r\n            </div>\r\n       \r\n        )\r\n    }\r\n\r\n    //Lets use function now\r\n    change(){\r\n        return this.state.count === 0 ? 'Zero hai bhai' : this.state.count;\r\n    }\r\n\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\Amit\\Desktop\\portfolio_project\\portfolio-react-app1\\src\\components\\pages\\About.js",["54"],"import React from 'react';\r\nimport {Box,Typography,Container} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n//Apna custom css add karne k liye we will use makestyles\r\n//ek variable bana lo useStyles \r\n\r\nconst useStyles = makeStyles({\r\n    blue: {\r\n        color : \"blue\",\r\n    } ,\r\n});\r\n\r\n\r\nconst About = () => {\r\n    const classes=useStyles();\r\n    return (\r\n        <Container maxwidt={2} disableGutters>\r\n        <Box py={55} bgcolor=\"aliceblue\" pt={10}>\r\n            <Typography display=\"inline\" variant =\"h1\" component=\"h2\" color=\"lightslategray\" align=\"left\">About Page!</Typography >\r\n\r\n            \r\n            <Typography variant =\"body1\" component=\"h2\" color=\"lightslategray\" align=\"left\" gutterBottom=\"true\" dispaly=\"inline\" className={classes.blue}>\r\n                 Line 36:29:  The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md  jsx-a11y/anchor-is-valid\r\n\r\n                src\\index.js\r\n                Line 6:8:  'Home' is defined but never used              no-unused-vars\r\n                Line 7:7:  'element' is assigned a value but never used  no-unused-vars\r\n\r\n                Search for the keywords to learn more about each warning.\r\n                To ignore, add // eslint-disable-next-line to the line before.\r\n\r\n            </Typography>\r\n\r\n            <Typography paragraph variant =\"body2\" component=\"h2\" color=\"lightslategray\" align=\"left\">\r\n                *******************************************************************************************************************888\r\n                 Line  36:29:  The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md  jsx-a11y/anchor-is-valid\r\n\r\n                src\\index.js\r\n                Line 6:8:  'Home' is defined but never used              no-unused-vars\r\n                Line 7:7:  'element' is assigned a value but never used  no-unused-vars\r\n\r\n                Search for the keywords to learn more about each warning.\r\n                To ignore, add // eslint-disable-next-line to the line before.\r\n\r\n            </Typography>\r\n            \r\n            <Typography variant =\"subtitle1\" align=\"justify\" component=\"h2\" color=\"lightslategray\" align=\"left\">\r\n                *******************************              subtitle1 aur justify********************************************************************************************************888\r\n                 Line 36:29:  The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md  jsx-a11y/anchor-is-valid\r\n\r\n                src\\index.js\r\n                Line 6:8:  'Home' is defined but never used              no-unused-vars\r\n                Line 7:7:  'element' is assigned a value but never used  no-unused-vars\r\n\r\n                Search for the keywords to learn more about each warning.\r\n                To ignore, add // eslint-disable-next-line to the line before.\r\n\r\n            </Typography>\r\n\r\n            <Typography p={6} variant =\"h1\" component=\"h2\"  align=\"center\">Heading 1!</Typography>\r\n            <Typography p={6} variant =\"h2\" component=\"h2\"  align=\"center\">Heading 2!</Typography>\r\n            <Typography p={6} variant =\"h3\" component=\"h2\"  align=\"center\">Heading 3!</Typography>\r\n            <Typography p={6} variant =\"h4\" component=\"h2\"  align=\"center\">Heading 4!</Typography>\r\n            <Typography p={6} variant =\"h5\" component=\"h2\"  align=\"center\">Heading 5!</Typography>\r\n        </Box>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default About\r\n ","C:\\Users\\Amit\\Desktop\\portfolio_project\\portfolio-react-app1\\src\\components\\pages\\Contact.js",["55","56","57","58"],"import React, { useState } from 'react'\r\nimport { Box, Typography, Button, Container } from '@material-ui/core'\r\nimport { blue } from '@material-ui/core/colors'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n        width: '25ch',\r\n      },\r\n    },\r\n  }));\r\n\r\n  function func1() {\r\n    var x1=document.getElementById('standard-basic').value;\r\n    alert(\"Hello\"+\" \"+x1);\r\n  }\r\n\r\n  function apicall() {\r\n    console.log(\"In api call function\")\r\n    document.getElementById(\"apicaller\").innerHTML=\"<h5>Sarkar ka swagat hai :)</h5>\"; \r\n  }\r\n\r\n\r\n//Box k width se div element ka structure fix kar sakte within UI  https://www.youtube.com/watch?v=3xhIcYeRgks\r\n//onChange function ka istemaal agar textbox mein nai karenge toh text field lock raega\r\n//console.warn(\"response returned is \"+JSON.stringify(respones_recieved)+\" type \"+typeof(respones_recieved))\r\nconst Contact = () => {\r\n\r\n    const classes = useStyles();  \r\n    const [FirstName,setFirstName]=useState(\"\");\r\n    const [Name,setName]=useState(\"\");\r\n    const [Job,setJob]=useState(\"\");\r\n      //yeh ek tarah ka constructdor samjho\r\n  function setter_function(){\r\n    console.log(\"In setter_function\"+FirstName)\r\n    document.getElementById(\"apicaller\").innerHTML=\"My Name is \"+\" \"+FirstName\r\n  }\r\n\r\n  function saveUser(){\r\n    let data={Name,Job}\r\n    console.warn(Name,Job);\r\n    fetch(\r\n      \"https://reqres.in/api/users\",\r\n      {\r\n        method: 'POST',\r\n        headers:{\r\n          'Accept':'application/json',\r\n          'Content-Type':'application/json'\r\n        },\r\n        body:JSON.stringify(data)\r\n      }\r\n    )\r\n    .then\r\n    (\r\n      (result)=>\r\n      {\r\n        console.warn(\"Recieved response in promise is \"+result+\" type \"+typeof(result))\r\n        result.json().then\r\n        (\r\n          (respones_recieved)=>\r\n          {\r\n            document.getElementById(\"apicaller\").innerHTML=JSON.stringify(respones_recieved)\r\n          }\r\n        )\r\n      }\r\n    )\r\n  }\r\n    return (\r\n      <div>\r\n      <Container maxWidth={1} disableGutters>\r\n        <Box bgcolor=\"aliceblue\" display=\"flex\" border={1} color={blue} width={1} p={30} border={1}>\r\n                <form className={classes.root} noValidate autoComplete=\"off\">\r\n                    <TextField id=\"standard-basic\" label=\"Name\" value={Name} onChange={(e) => {setName(e.target.value)}}/> \r\n                    <TextField id=\"standard-basic\" label=\"Job\" value={Job} onChange={(e) => {setJob(e.target.value)}}/> \r\n                    <TextField id=\"standard-basic\" label=\"First Name\" value={FirstName} onChange={(e) => {setFirstName(e.target.value)}}/> \r\n                    <TextField id=\"filled-basic\" label=\"Middle Name\" variant=\"filled\" />\r\n                    <TextField id=\"outlined-basic\" label=\"Last Name\" variant=\"outlined\" />\r\n                    <Button style={{maxWidth: '150px', maxHeight: '120px', minWidth: '90px', minHeight: '55px'}} onClick={() => { alert('clicked by Amit') }} variant=\"contained\" color=\"primary\">CLICK ME</Button>\r\n                    <Button style={{maxWidth: '150px', maxHeight: '120px', minWidth: '90px', minHeight: '55px'}} onClick={() => {func1() }} variant=\"contained\" color=\"primary\">CLICK ME Modular</Button>\r\n                    <Button style={{maxWidth: '150px', maxHeight: '120px', minWidth: '90px', minHeight: '55px'}} onClick={() => {apicall() }} variant=\"contained\" color=\"primary\">CLICK ME API</Button>\r\n                    <Button style={{maxWidth: '150px', maxHeight: '120px', minWidth: '220px', minHeight: '55px'}}  onClick={() => {setter_function() }} variant=\"contained\" color=\"primary\">Babu ka swagat kariye</Button>\r\n                    <Button style={{maxWidth: '150px', maxHeight: '120px', minWidth: '90px', minHeight: '55px'}} onClick={() => { saveUser() }} variant=\"contained\" color=\"primary\">Save New User</Button>\r\n                </form>\r\n        </Box>    \r\n        </Container>\r\n\r\n<div id=\"apicaller\">\r\n<h5>Welcome Home Babe</h5>\r\n</div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Contact\r\n","C:\\Users\\Amit\\Desktop\\portfolio_project\\portfolio-react-app1\\src\\components\\pages\\Address.js",["59","60","61","62","63","64"],"import React,{useState,useEffect} from 'react'\r\nimport {Box,Typography,Container,TableContainer,Table,TableBody,TableHead,TableCell,TableRow, Paper, makeStyles,TablePagination} from '@material-ui/core'\r\nimport { blue } from '@material-ui/core/colors'\r\nimport axios from 'axios'\r\n\r\nconst useStyles = makeStyles((theme) => (\r\n    {\r\n        root: {\r\n            maxWidth: \"100vw\",\r\n            height: \"100vh\",\r\n            backgroundColor: theme.palette.grey['200'],\r\n            paddingTop: theme.spacing(8),\r\n        }\r\n    }\r\n));\r\n\r\n\r\n//Box k width se div element ka structure fix kar sakte within UI\r\nconst Address = () => {\r\n\r\n    const classes = useStyles();\r\n    // users setusers do variable banein jismein value usestate array k dwara pass hogi\r\n    const [users, setUsers] = useState([]);\r\n    const [page, setPage] = useState(0)\r\n    const [rowsPerPage, setRowsPerPage] = useState(3)\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const loadUsers = async () => {\r\n        const promise_responce=await axios.get(\"https://jsonplaceholder.typicode.com/users\")\r\n        setUsers(promise_responce.data)\r\n    }\r\n        useEffect(() => {\r\n            loadUsers()\r\n        }, [])\r\n\r\n    const onChangePage_function = (event, nextPage) => {\r\n        setPage(nextPage);\r\n    }\r\n\r\n    const onChangeRowsPerPage_function = (event) => {\r\n        setRowsPerPage(event.target.value)\r\n    }\r\n    return (\r\n        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n        <TableContainer component={Paper} className={classes.root}>\r\n            <Table>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Name</TableCell>\r\n                        <TableCell>Email</TableCell>\r\n                        <TableCell>ID</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n               \r\n\r\n                <TableBody>\r\n                {users.slice(page * rowsPerPage,page * rowsPerPage + rowsPerPage).map((user) => (\r\n                <TableRow>\r\n                        <TableCell>{user.name}</TableCell>\r\n                        <TableCell>{user.email}</TableCell>\r\n                        <TableCell>{user.phone}</TableCell>\r\n                </TableRow>\r\n                ))}                   \r\n                </TableBody>\r\n            </Table>\r\n          \r\n            <TablePagination\r\n            rowsPerPageOptions={[3,6,1,2]}\r\n            count={users.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onChangePage={onChangePage_function}\r\n            onChangeRowsPerPage={onChangeRowsPerPage_function}\r\n\r\n            />\r\n           \r\n            \r\n        </TableContainer>\r\n\r\n\r\n\r\n        \r\n\r\n    )\r\n}\r\n\r\nexport default Address\r\n ","C:\\Users\\Amit\\Desktop\\portfolio_project\\portfolio-react-app1\\src\\components\\pages\\Home.js",["65"],"import React from 'react'\r\nimport {Box,Typography,Container} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport './Home.css'\r\n//Apna custom css add karne k liye we will use makestyles\r\n//ek variable bana lo useStyles \r\n\r\nconst useStyles = makeStyles({\r\n    blue: {\r\n        color : \"blue\",\r\n    } ,\r\n});\r\n\r\nfunction sum(a,b){\r\n    if(a>b){\r\n        return <span className='eval1'>a is greater than b</span>\r\n    }\r\n    else {\r\n        return <span className='eval2'>b is greater than a</span>\r\n    }\r\n    \r\n}\r\n\r\nconst pageTitle='Welcome to home Babe'\r\n\r\nconsole.log(\"Hello Babe\")\r\n\r\nconst Home = () => {\r\n    const classes=useStyles();\r\n    return (\r\n        <Container maxwidth={1} disableGutters>\r\n            <Box py={20} bgcolor=\"aliceblue\" pt={40}>\r\n            <Typography p={10} variant =\"h1\" component=\"h2\"  align=\"center\">{pageTitle}</Typography>\r\n            </Box>\r\n            <Box>\r\n            <Typography p={10} variant =\"h1\" component=\"h2\"  align=\"center\">{sum(1,2)}</Typography>\r\n            </Box>\r\n            <Box>\r\n            <Typography p={10} variant =\"h1\" component=\"h2\"  align=\"center\">{sum(3,2)}</Typography>\r\n            </Box>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","C:\\Users\\Amit\\Desktop\\portfolio_project\\portfolio-react-app1\\src\\components\\pages\\spinner.js",[],{"ruleId":"66","severity":1,"message":"67","line":6,"column":8,"nodeType":"68","messageId":"69","endLine":6,"endColumn":12},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"66","severity":1,"message":"74","line":3,"column":8,"nodeType":"68","messageId":"69","endLine":3,"endColumn":16},{"ruleId":"66","severity":1,"message":"75","line":6,"column":34,"nodeType":"68","messageId":"69","endLine":6,"endColumn":40},{"ruleId":"76","severity":1,"message":"77","line":17,"column":21,"nodeType":"78","endLine":17,"endColumn":54},{"ruleId":"76","severity":1,"message":"77","line":22,"column":25,"nodeType":"78","endLine":22,"endColumn":54},{"ruleId":"76","severity":1,"message":"77","line":25,"column":25,"nodeType":"78","endLine":25,"endColumn":54},{"ruleId":"76","severity":1,"message":"77","line":30,"column":25,"nodeType":"78","endLine":30,"endColumn":109},{"ruleId":"76","severity":1,"message":"77","line":34,"column":29,"nodeType":"78","endLine":34,"endColumn":63},{"ruleId":"76","severity":1,"message":"77","line":35,"column":29,"nodeType":"78","endLine":35,"endColumn":63},{"ruleId":"76","severity":1,"message":"77","line":36,"column":29,"nodeType":"78","endLine":36,"endColumn":63},{"ruleId":"79","severity":1,"message":"80","line":48,"column":100,"nodeType":"81","endLine":48,"endColumn":112},{"ruleId":"66","severity":1,"message":"82","line":2,"column":15,"nodeType":"68","messageId":"69","endLine":2,"endColumn":25},{"ruleId":"83","severity":1,"message":"84","line":18,"column":18,"nodeType":"85","messageId":"86","endLine":18,"endColumn":19},{"ruleId":"83","severity":1,"message":"84","line":39,"column":65,"nodeType":"85","messageId":"86","endLine":39,"endColumn":66},{"ruleId":"79","severity":1,"message":"80","line":74,"column":90,"nodeType":"81","endLine":74,"endColumn":100},{"ruleId":"66","severity":1,"message":"87","line":2,"column":9,"nodeType":"68","messageId":"69","endLine":2,"endColumn":12},{"ruleId":"66","severity":1,"message":"82","line":2,"column":13,"nodeType":"68","messageId":"69","endLine":2,"endColumn":23},{"ruleId":"66","severity":1,"message":"88","line":2,"column":24,"nodeType":"68","messageId":"69","endLine":2,"endColumn":33},{"ruleId":"66","severity":1,"message":"89","line":3,"column":10,"nodeType":"68","messageId":"69","endLine":3,"endColumn":14},{"ruleId":"66","severity":1,"message":"90","line":26,"column":12,"nodeType":"68","messageId":"69","endLine":26,"endColumn":19},{"ruleId":"66","severity":1,"message":"91","line":26,"column":21,"nodeType":"68","messageId":"69","endLine":26,"endColumn":31},{"ruleId":"66","severity":1,"message":"92","line":29,"column":11,"nodeType":"68","messageId":"69","endLine":29,"endColumn":18},"no-unused-vars","'Home' is defined but never used.","Identifier","unusedVar","no-native-reassign",["93"],"no-negated-in-lhs",["94"],"'ReactDOM' is defined but never used.","'Switch' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Typography' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'Box' is defined but never used.","'Container' is defined but never used.","'blue' is defined but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'classes' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]